#Project Euler Problem 2

#Problem Name: Even Fibonacci numbers

#Link: https://projecteuler.net/problem=2

"""
---BEGIN PROBLEM STATEMENT---

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

---END OF PROBLEM STATEMENT---

First scratch work:

fib1+fib2

1 | 2
2 | 3
3 | 5
5 | 8

"""


fib1=1
fib2=2
evensum=0
while fib2 <= 4000000:
	print("fib1 before add is: " + str(fib1))
	print("fib2 before add is: " + str(fib2))
	regsum=fib1+fib2
	#first iteration: regsum = 1+2=3 
	
	if fib2 %2 == 0:
		evensum += fib2
	#want to change fib1 and fib2 for next addition so need to swap variables
	#two variable swaps for two variables
	"""
	int temp = a;
    a = b;
    b = temp;

    1    2

    store original value of 1

	"""
	temp1 = fib1
	fib1 = fib2
	fib2 += temp1
	

	print("fib1 after add and swap is: " + str(fib1))
	print("fib2 after add and swap is: " + str(fib2))
	print("Current sum of even Fibonacci numbers is: " + str(evensum))
	
print("Your answer (ending even sum) is: " + str(evensum))